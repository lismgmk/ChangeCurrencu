{"version":3,"sources":["a1-root/v1-Main/Main.module.css","a1-root/App.module.css","a1-root/v2-SetExchange/Set.module.css","a1-root/v3-Page_404/Page_404.module.css","a1-root/v6-Api/exchange-api.ts","a1-root/v5-redusers/mainReduser.ts","a1-root/v4-components/CurrencyElements/CurrensyElement.tsx","a1-root/v1-Main/Main.tsx","a1-root/v2-SetExchange/SetExchange.tsx","a1-root/v5-redusers/setReduser.ts","a1-root/v5-redusers/mainArrayReduser.ts","a1-root/v3-Page_404/Page_404.tsx","a1-root/App.tsx","reportWebVitals.ts","a1-root/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","exchangeAPI","get","fetchCurerencyThunk","dispatch","getState","currencyArray","mainArr","then","data","dataArr","filter","i","includes","Cur_Abbreviation","type","addCurrencuAC","CurrencyElement","props","dateToday","date","slice","split","reverse","join","useState","value","name","rate","copied","valueCur","setValueCur","className","style","papers","Box","color","text","onCopy","Button","variant","id","Main","useEffect","currencu","useSelector","state","main","useDispatch","column","map","Cur_ID","Date","Cur_Name","Cur_OfficialRate","onClick","SetExchange","allCurrency","set","mainArray","options","selected","select","setSelect","App","size","length","multiple","onChange","e","currentTarget","disabled","el","Page_404","to","PATH","EXCHANG_MAIN","activeClassName","activeLink","EXCHANG_SET","path","EXCHANG","exact","render","EXCHANG_START","EXCHANG_404","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","item","store","createStore","applyMiddleware","thunk","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0fbfcaaa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"Main_blue__1Wt_S\",\"column\":\"Main_column__3alvV\",\"testSpanError\":\"Main_testSpanError__b_sZT\",\"papers\":\"Main_papers__2yPVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__31Bkx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Set_App__3JDA8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Page_404_App__1k_Y9\"};","import axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://www.nbrb.by/API/ExRates',\r\n})\r\n\r\nexport type CurrencyType = {\r\n    Cur_ID: number,\r\n    Date: string,\r\n    Cur_Abbreviation: string,\r\n    Cur_Scale: number,\r\n    Cur_Name: string,\r\n    Cur_OfficialRate: string\r\n}\r\nexport type CurrencyOneType = {\r\n    Cur_ID: number,\r\n    Cur_Name: string,\r\n}\r\n\r\n\r\n\r\nexport const exchangeAPI = {\r\n\r\n    getCurrency() {\r\n        return instance.get<Array<CurrencyType>>(`/Rates?Periodicity=0`)\r\n    },\r\n    getOneCurrency( id: number) {\r\n        return instance.get<CurrencyOneType>(`Currencies/${id}`)\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import {CurrencyType, exchangeAPI} from \"../v6-Api/exchange-api\";\nimport {AppRootStateType} from \"../store\";\n\nexport const mainReduser = (state: Array<CurrencyType> = [], action: ReturnType<typeof addCurrencuAC>\n) => {\n    switch (action.type) {\n        case \"ADD_DATA\":\n            return action.dataArr\n         default:\n            return state\n    }\n}\n\nexport const addCurrencuAC = (dataArr: Array<CurrencyType>) => ({type: \"ADD_DATA\", dataArr}) as const\n\nexport const fetchCurerencyThunk = () => (dispatch: any, getState: AppRootStateType) => {\n// @ts-ignore\n    let currencyArray = getState().mainArr\n    exchangeAPI.getCurrency()\n        .then(data => {\n                const dataArr = data.data.filter(i => {\n                    return currencyArray.includes(i.Cur_Abbreviation)\n                })\n                dispatch(addCurrencuAC(dataArr))\n            }\n        )\n}\n\n","import React, {useState} from 'react';\nimport {Paper, Box, Button} from \"@material-ui/core\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport style from '../../v1-Main/Main.module.css'\n\nexport function CurrencyElement(props: CurrencyElementType) {\n\n\n    const dateToday = props.date.slice(0, 10).split('-').reverse().join('-')\n\n    const [valueCur, setValueCur] = useState({\n        value: ['Date', dateToday, 'Currency', props.name, 'Rate', props.rate, 'BYN'].join(' '),\n        copied: false,\n    })\n\n    return (\n\n            <div className={style.papers} key={props.id}>\n                <Box color=\"red\">\n                    <span>Дата:  </span>{dateToday}\n                </Box>\n                <Box>\n                    <span>Валюта:  </span> {props.name}\n                </Box>\n                <Box>\n                    <span>Курс: </span> {props.rate} BYN\n                </Box>\n\n                <CopyToClipboard text={valueCur.value}\n                                 onCopy={() => setValueCur({\n                                     copied: true,\n                                     value: [props.rate, props.name, props.date].join(' ')\n                                 })}>\n                    <Button variant=\"contained\" color=\"primary\">Copy to clipboard</Button>\n                </CopyToClipboard>\n            </div>\n\n\n\n    )\n\n}\n\ntype CurrencyElementType = {\n    id: number\n    date: string\n    name: string\n    rate: string\n}\n","import React, {useEffect} from 'react';\nimport style from './Main.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    fetchCurerencyThunk,\n} from \"../v5-redusers/mainReduser\";\nimport {AppRootStateType} from \"../store\";\nimport {CurrencyType} from \"../v6-Api/exchange-api\";\nimport {CurrencyElement} from \"../v4-components/CurrencyElements/CurrensyElement\";\nimport {Button} from \"@material-ui/core\";\n\n\nfunction Main() {\n\n    useEffect(function (){\n    dispatch(fetchCurerencyThunk())\n}, [] )\n\n    const currencu = useSelector<AppRootStateType, Array<CurrencyType>>(state => state.main);\n\n    const dispatch = useDispatch();\n\n    const refreshData = ()=>{\n        dispatch(fetchCurerencyThunk())\n    }\n\n    return (\n        <div className={style.column}>\n            {\n                currencu.map(i=>{\n                    return(\n                        <CurrencyElement\n                            id={i.Cur_ID}\n                            date={i.Date}\n                            name={i.Cur_Name}\n                            rate={i.Cur_OfficialRate}\n                        />\n                    )\n                })\n            }\n            <Button variant=\"contained\" color=\"primary\" onClick={refreshData}>Refresh</Button>\n        </div>\n    )\n}\n\nexport default Main\n","import React, {useEffect, useState} from 'react';\nimport style from './Set.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../store\";\nimport {CurrencyType} from \"../v6-Api/exchange-api\";\nimport { fetchAllCurerencyThunk} from \"../v5-redusers/setReduser\";\nimport {addElArrayAC, delElArrayAC} from \"../v5-redusers/mainArrayReduser\";\nimport {Button, Select} from \"@material-ui/core\";\n\n\nexport function SetExchange() {\n    useEffect(()=>{\n    dispatch(fetchAllCurerencyThunk())\n},[])\n\n\n    const allCurrency = useSelector<AppRootStateType, Array<CurrencyType>>(state => state.set);\n    const mainArray = useSelector<AppRootStateType, Array<string>>(state => state.mainArr);\n    const dispatch = useDispatch();\n\n\n    const options = allCurrency.map(i=>{\n      return  <option\n          value={i.Cur_Abbreviation}\n      selected={mainArray.includes(i.Cur_Abbreviation)}\n      >\n          {i.Cur_Name}\n      </option>\n    })\n\n    const[select, setSelect]=useState('')\n    const addCurrencu =()=>{\n        dispatch(addElArrayAC(select))\n    }\n    const deleteCurrencu =()=>{\n        dispatch(delElArrayAC(select))\n    }\n\n\n  return (\n    <div className={style.App}>\n\n        <select\n            size={allCurrency.length+1}\n            multiple\n                onChange={(e)=>{\n            setSelect(e.currentTarget.value)\n        }}>\n            <option value=\"\" selected disabled>Please select an currensy...</option>\n            {allCurrency && options}\n        </select>\n        <Button variant=\"contained\" color=\"primary\" onClick={addCurrencu}>Add Currencu</Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={deleteCurrencu}>Delete Currencu</Button>\n    </div>\n  )\n}\n\n","import {CurrencyType, exchangeAPI} from \"../v6-Api/exchange-api\";\n\nexport const setReduser = (state: Array<CurrencyType> = [], action: ReturnType<typeof addAllCurrencuAC>\n\n) => {\n    switch (action.type) {\n        case \"ADD_ALL_CURRENCU\":\n            return action.currencu\n         default:\n            return state\n    }\n}\n\n\nexport const addAllCurrencuAC = (currencu: Array<CurrencyType>) => ({type: \"ADD_ALL_CURRENCU\", currencu}) as const\n\nexport const fetchAllCurerencyThunk = () => (dispatch: any) => {\n    exchangeAPI.getCurrency()\n        .then(data => {\n                dispatch(addAllCurrencuAC(data.data))\n            }\n        )\n}\n\n","\nexport const mainArrayReduser = (state: Array<string> = ['USD', 'RUB', 'EUR'], action:\n    | ReturnType<typeof addElArrayAC>\n    | ReturnType<typeof delElArrayAC>\n) => {\n    switch (action.type) {\n        case \"ADD_ELEM\":\n            return [...state, action.el]\n        case \"DEL_ELEM\":\n            return [...state].filter(item => item != action.el)\n         default:\n            return state\n    }\n}\n\nexport const addElArrayAC = (el: string) => ({type: \"ADD_ELEM\", el}) as const\nexport const delElArrayAC = (el: string) => ({type: \"DEL_ELEM\", el}) as const\n\n// 2021-08-21T00:00:00","import React from 'react';\nimport style from './Page_404.module.css'\n\nfunction Page_404() {\n  return (\n    <div className={style.App}>\n      <h1>Page 404</h1>\n    </div>\n  );\n}\n\nexport default Page_404;\n","import React from 'react';\nimport {Switch, Route, Redirect, NavLink} from 'react-router-dom';\nimport style from './App.module.css'\nimport Main from \"./v1-Main/Main\";\nimport {SetExchange} from \"./v2-SetExchange/SetExchange\";\nimport Page_404 from \"./v3-Page_404/Page_404\";\nimport {Button} from \"@material-ui/core\";\n\n\n\nfunction App() {\n    return (\n        <>\n            <div className={style.App}>\n               <NavLink to={PATH.EXCHANG_MAIN} activeClassName={style.activeLink}>Main</NavLink>\n                <NavLink to={PATH.EXCHANG_SET} activeClassName={style.activeLink}>Set</NavLink>\n\n\n            </div>\n            <Switch>\n                <Route path={PATH.EXCHANG} exact render={() => ()=><Main/>}/>\n                <Route path={'/'} exact render={() => ()=><Main/>}/>\n                <Route path={PATH.EXCHANG_START} exact render={() => ()=><Main/>}/>\n\n                <Route exact path={PATH.EXCHANG_MAIN} render={()=><Main/> }/>\n                <Route exact path={PATH.EXCHANG_SET} render={()=><SetExchange/> }/>\n                <Route exact path={PATH.EXCHANG_404} render={()=><Page_404/> }/>\n\n                <Redirect from={'*'} to={PATH.EXCHANG_404}/>\n            </Switch>\n        </>\n    )\n}\n\nexport default App\n\nexport const PATH = {\n    EXCHANG: '/ChangeCurrencu/',\n    EXCHANG_START: '/exchang',\n    EXCHANG_MAIN: '/exchang/main',\n    EXCHANG_SET: '/exchang/setReduser',\n    EXCHANG_404: '/exchang/404',\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\nimport thunk from \"redux-thunk\";\nimport {mainReduser} from \"./v5-redusers/mainReduser\";\nimport {setReduser} from \"./v5-redusers/setReduser\";\nimport {mainArrayReduser} from \"./v5-redusers/mainArrayReduser\";\n\n\n\nconst rootReducer = combineReducers({\n    main: mainReduser,\n    mainArr: mainArrayReduser,\n    set: setReduser,\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nwindow.store = store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './a1-root/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./a1-root/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}